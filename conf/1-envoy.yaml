# The static_resources bloc contains definitions for clusters and listeners that aren’t dynamically managed
static_resources:
  listeners:
  # Listener configured to listen on port 80
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 15001 
    # Listner's filter chain is configured that Envoy to manage HTTP traffic.
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            # Virtual host configures to accept traffic for all domains.
            # With Routes, mapping traffic for /service/blue, /service/green, and /service/red to the appropriate clusters.
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/bin/"
                route:
                  prefix_rewrite: "/"
                  cluster: httpbin 
              - match:
                  prefix: "/bin"
                route:
                  prefix_rewrite: "/"
                  cluster: httpbin 
          http_filters:
          - name: envoy.router
            config: {}
  # Static Clouster configurations:
  # You can configure timeouts, circuit breakers, discovery settings, and more on clusters
  # Clusters are composed of endpoints – a set of network locations that can serve requests for the cluster. 
  # In this example, endpoints are canonically defined in DNS, which Envoy can read from. 
  # Endpoints can also be defined directly as socket addresses, or read dynamically via the Endpoint Discovery Service.
  clusters:
  - name: httpbin 
    connect_timeout: 4s
    type: strict_dns
    lb_policy: round_robin
    # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster/circuit_breaker.proto#envoy-api-msg-cluster-circuitbreakers
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        # nuber of http/1 connections
        max_connections: 1
        # number of requests to be queued/waiting for connections 
        # to become available
#        max_pending_requests: 1
#        max_requests: 1
#        track_remaining: true
#    # Panic
#    # https://www.envoyproxy.io/docs/envoy/latest/configuration/upstream/cluster_manager/cluster_runtime#config-cluster-manager-cluster-runtime
#    upstream:
#      healthy_panic_threshold: 100 # 50
#    # Outlier
#    outlier_detection:
###      # if we have 1 5xx, mark it as unhealthy and temporarily remove it from lb pool
#      consecutive_5xx: 1 # 5 default
##      # OR
###      consecutive_gateway_failure: 1
###      # we are able the eject all hosts
#      max_ejection_percent: 100  # 10
#      interval: 20s  #10s
###      # The actual time that a host would be ejected from the load-balancing 
###      # pool is this “base” setting multiplied by the number of times it’s been
###      # ejected. This allows us to more harshly penalize hosts that seem to be 
###      # consistently less reliable.
#      base_ejection_time: 20s #30s


    hosts:
    - socket_address:
        address: httpbin
        port_value: 8000
admin:
  access_log_path: "/dev/null"
  # The address object tells Envoy to create an admin server listening on port 8001.
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000
